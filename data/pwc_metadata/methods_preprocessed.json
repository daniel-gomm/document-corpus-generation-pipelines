{"categorical modularity": "https://paperswithcode.com/method/categorical-modularity", "high-order consensuses": "https://paperswithcode.com/method/hoc", "cross-view training": "https://paperswithcode.com/method/cross-view-training", "vgg-16": "https://paperswithcode.com/method/vgg-16", "srbtaw (btw)": "https://paperswithcode.com/method/srbtaw", "self-regularizing boundary time and amplitude warping": "https://paperswithcode.com/method/srbtaw", "deep ensembles": "https://paperswithcode.com/method/deep-ensembles", "geco": "https://paperswithcode.com/method/geco", "generalized elbo with constrained optimization": "https://paperswithcode.com/method/geco", "fast-yolov2": "https://paperswithcode.com/method/fast-yolov2", "bigcn": "https://paperswithcode.com/method/bigcn", "bi-directional graph convolutional network": "https://paperswithcode.com/method/bigcn", "segsort": "https://paperswithcode.com/method/segsort", "segment sorting": "https://paperswithcode.com/method/segsort", "linformer": "https://paperswithcode.com/method/linformer", "inception-c": "https://paperswithcode.com/method/inception-c", "nvae": "https://paperswithcode.com/method/nvae", "nouveau vae": "https://paperswithcode.com/method/nvae", "gpt-neo": "https://paperswithcode.com/method/gpt-neo", "ke-mlm": "https://paperswithcode.com/method/ke-mlm", "knowledge enhanced masked language model": "https://paperswithcode.com/method/ke-mlm", "dv3 convolution block": "https://paperswithcode.com/method/dv3-convolution-block", "estimation statistics": "https://paperswithcode.com/method/estimation-statistics", "gcnfn": "https://paperswithcode.com/method/gcnfn", "graph convolutional networks for fake news detection": "https://paperswithcode.com/method/gcnfn", "approximate bayesian computation": "https://paperswithcode.com/method/abc", "strided eesp": "https://paperswithcode.com/method/strided-eesp", "shifted softplus": "https://paperswithcode.com/method/ssp", "spatially separable convolution": "https://paperswithcode.com/method/spatially-separable-convolution", "segregated attention network": "https://paperswithcode.com/method/segregated-attention-network", "efficientdet": "https://paperswithcode.com/method/efficientdet", "mask r-cnn": "https://paperswithcode.com/method/mask-r-cnn", "diffaugment": "https://paperswithcode.com/method/diffaugment", "random grayscale": "https://paperswithcode.com/method/random-grayscale", "wavegrad ublock": "https://paperswithcode.com/method/wavegrad-ublock", "spatial attention module (thundernet)": "https://paperswithcode.com/method/spatial-attention-module-thundernet", "concatenation affinity": "https://paperswithcode.com/method/concatenation-affinity", "iou-guided nms": "https://paperswithcode.com/method/iou-guided-nms", "talk convolution": "https://paperswithcode.com/method/talk-convolutions", "time-aware large kernel convolution": "https://paperswithcode.com/method/talk-convolutions", "lapgan": "https://paperswithcode.com/method/lapgan", "wfst": "https://paperswithcode.com/method/wfst", "weighted finite state transducer": "https://paperswithcode.com/method/wfst", "all-attention layer": "https://paperswithcode.com/method/all-attention-layer", "discriminative fine-tuning": "https://paperswithcode.com/method/discriminative-fine-tuning", "monte-carlo tree search": "https://paperswithcode.com/method/monte-carlo-tree-search", "colorization": "https://paperswithcode.com/method/colorization", "adabelief": "https://paperswithcode.com/method/adabelief", "differnet": "https://paperswithcode.com/method/differnet", "wavernn": "https://paperswithcode.com/method/wavernn", "graphsage": "https://paperswithcode.com/method/graphsage", "dg-net": "https://paperswithcode.com/method/dg-net", "discriminative and generative network": "https://paperswithcode.com/method/dg-net", "stochastic dueling network": "https://paperswithcode.com/method/stochastic-dueling-network", "reformer": "https://paperswithcode.com/method/reformer", "cosine annealing": "https://paperswithcode.com/method/cosine-annealing", "inception-resnet-v2 reduction-b": "https://paperswithcode.com/method/inception-resnet-v2-reduction-b", "conditional dblock": "https://paperswithcode.com/method/conditional-dblock", "wide residual block": "https://paperswithcode.com/method/wide-residual-block", "visual attention": "https://paperswithcode.com/method/visual-attention", "monte carlo dropout": "https://paperswithcode.com/method/monte-carlo-dropout", "heatmap": "https://paperswithcode.com/method/heatmap", "npid": "https://paperswithcode.com/method/npid", "svpg": "https://paperswithcode.com/method/svpg", "stein variational policy gradient": "https://paperswithcode.com/method/svpg", "sinkhorn transformer": "https://paperswithcode.com/method/sinkhorn-transformer", "inverted residual block": "https://paperswithcode.com/method/inverted-residual-block", "deep voice 3": "https://paperswithcode.com/method/deep-voice-3", "independent component analysis": "https://paperswithcode.com/method/ica", "mixture normalization": "https://paperswithcode.com/method/mixture-normalization", "graph convolutional networks": "https://paperswithcode.com/method/graph-convolutional-networks", "patchgan": "https://paperswithcode.com/method/patchgan", "sabn": "https://paperswithcode.com/method/sabn", "sandwich batch normalization": "https://paperswithcode.com/method/sabn", "sdae": "https://paperswithcode.com/method/sdae", "stacked denoising autoencoder": "https://paperswithcode.com/method/sdae", "ghm-c": "https://paperswithcode.com/method/ghm-c", "gradient harmonizing mechanism c": "https://paperswithcode.com/method/ghm-c", "moco": "https://paperswithcode.com/method/moco", "momentum contrast": "https://paperswithcode.com/method/moco", "seq2seq": "https://paperswithcode.com/method/seq2seq", "sequence to sequence": "https://paperswithcode.com/method/seq2seq", "self-adjusting smooth l1 loss": "https://paperswithcode.com/method/self-adjusting-smooth-l1-loss", "channel shuffle": "https://paperswithcode.com/method/channel-shuffle", "dmage": "https://paperswithcode.com/method/dmage", "unsupervised deep manifold attributed graph embedding": "https://paperswithcode.com/method/dmage", "selective kernel": "https://paperswithcode.com/method/selective-kernel", "panoptic fpn": "https://paperswithcode.com/method/panoptic-fpn", "generalized mean pooling": "https://paperswithcode.com/method/generalized-mean-pooling", "moco v2": "https://paperswithcode.com/method/moco-v2", "content-based attention": "https://paperswithcode.com/method/content-based-attention", "relativistic gan": "https://paperswithcode.com/method/relativistic-gan", "cascade mask r-cnn": "https://paperswithcode.com/method/cascade-mask-r-cnn", "center pooling": "https://paperswithcode.com/method/center-pooling", "reppoints": "https://paperswithcode.com/method/reppoints", "bpnet": "https://paperswithcode.com/method/bpnet", "bidirectional pyramid networks for semantic segmentation": "https://paperswithcode.com/method/bpnet", "mlfpn": "https://paperswithcode.com/method/mlfpn", "h-bemd": "https://paperswithcode.com/method/h-bemd", "hue \u2014 bi-dimensional empirical mode decomposition": "https://paperswithcode.com/method/h-bemd", "automl-zero": "https://paperswithcode.com/method/automl-zero", "shufflenet v2": "https://paperswithcode.com/method/shufflenet-v2", "adamod": "https://paperswithcode.com/method/adamod", "zfnet": "https://paperswithcode.com/method/zfnet", "qrnn": "https://paperswithcode.com/method/qrnn", "quasi-recurrent neural network": "https://paperswithcode.com/method/qrnn", "adaptive masking": "https://paperswithcode.com/method/adaptive-masking", "context enhancement module": "https://paperswithcode.com/method/context-enhancement-module", "dueling network": "https://paperswithcode.com/method/dueling-network", "extremenet": "https://paperswithcode.com/method/extremenet", "sigmoid activation": "https://paperswithcode.com/method/sigmoid-activation", "centermask": "https://paperswithcode.com/method/centermask", "elish": "https://paperswithcode.com/method/elish", "exponential linear squashing activation": "https://paperswithcode.com/method/elish", "scaled dot-product attention": "https://paperswithcode.com/method/scaled", "node2vec": "https://paperswithcode.com/method/node2vec", "de-gan": "https://paperswithcode.com/method/de-gan", "de-gan: a conditional generative adversarial network for document enhancement": "https://paperswithcode.com/method/de-gan", "class attention": "https://paperswithcode.com/method/ca", "transformer in transformer": "https://paperswithcode.com/method/tnt", "mad learning": "https://paperswithcode.com/method/mad-learning", "memory-associated differential learning": "https://paperswithcode.com/method/mad-learning", "soft actor-critic (autotuned temperature)": "https://paperswithcode.com/method/soft-actor-critic-autotuned-temperature", "esim": "https://paperswithcode.com/method/esim", "enhanced sequential inference model": "https://paperswithcode.com/method/esim", "layerscale": "https://paperswithcode.com/method/layerscale", "spp-net": "https://paperswithcode.com/method/spp-net", "projection discriminator": "https://paperswithcode.com/method/projection-discriminator", "rbpn": "https://paperswithcode.com/method/rbpn", "recurrent back projection network": "https://paperswithcode.com/method/rbpn", "bottleneck residual block": "https://paperswithcode.com/method/bottleneck-residual-block", "autoaugment": "https://paperswithcode.com/method/autoaugment", "graph convolutional network": "https://paperswithcode.com/method/gcn", "matrixnet": "https://paperswithcode.com/method/matrixnet", "adamax": "https://paperswithcode.com/method/adamax", "rfb net": "https://paperswithcode.com/method/rfb-net", "efficient channel attention": "https://paperswithcode.com/method/efficient-channel-attention", "wavenet": "https://paperswithcode.com/method/wavenet", "sparse sinkhorn attention": "https://paperswithcode.com/method/sparse-sinkhorn-attention", "embedding dropout": "https://paperswithcode.com/method/embedding-dropout", "extreme value machine": "https://paperswithcode.com/method/evm", "ghostnet": "https://paperswithcode.com/method/ghostnet", "feedforward network": "https://paperswithcode.com/method/feedforward-network", "qhadam": "https://paperswithcode.com/method/qhadam", "pinvgcn": "https://paperswithcode.com/method/pinvgcn", "pseudoinverse graph convolutional network": "https://paperswithcode.com/method/pinvgcn", "edgeboxes": "https://paperswithcode.com/method/edgeboxes", "tresnet": "https://paperswithcode.com/method/tresnet", "instance normalization": "https://paperswithcode.com/method/instance-normalization", "dv3 attention block": "https://paperswithcode.com/method/dv3-attention-block", "darknet-19": "https://paperswithcode.com/method/darknet-19", "large-scale spectral clustering": "https://paperswithcode.com/method/large-scale-spectral-clustering", "sliding window attention": "https://paperswithcode.com/method/sliding-window-attention", "principal components analysis": "https://paperswithcode.com/method/pca", "randomrotate": "https://paperswithcode.com/method/randomrotate", "cross-resolution features": "https://paperswithcode.com/method/cross-resolution-features", "spatial pyramid pooling": "https://paperswithcode.com/method/spatial-pyramid-pooling", "synthesizer": "https://paperswithcode.com/method/synthesizer", "contractive autoencoder": "https://paperswithcode.com/method/contractive-autoencoder", "bottom-up path augmentation": "https://paperswithcode.com/method/bottom-up-path-augmentation", "cutmix": "https://paperswithcode.com/method/cutmix", "image scale augmentation": "https://paperswithcode.com/method/image-scale-augmentation", "graph2tree": "https://paperswithcode.com/method/graph2tree", "graph-to-tree mwp solver": "https://paperswithcode.com/method/graph2tree", "tsrup": "https://paperswithcode.com/method/tsrup", "proximal policy optimization": "https://paperswithcode.com/method/ppo", "spatial attention module": "https://paperswithcode.com/method/spatial-attention-module", "dropblock": "https://paperswithcode.com/method/dropblock", "gcnet": "https://paperswithcode.com/method/gcnet", "residual block": "https://paperswithcode.com/method/residual-block", "end-to-end memory network": "https://paperswithcode.com/method/end-to-end-memory-network", "roi tanh-polar transform": "https://paperswithcode.com/method/roi-tanh-polar-transform", "edlps": "https://paperswithcode.com/method/edlps", "encoder-decoder model with local and pairwise loss along with shared encoder and discriminator network (edlps)": "https://paperswithcode.com/method/edlps", "efficientnet": "https://paperswithcode.com/method/efficientnet", "n-step returns": "https://paperswithcode.com/method/n-step-returns", "lightconv": "https://paperswithcode.com/method/lightconv", "lightweight convolution": "https://paperswithcode.com/method/lightconv", "axial attention": "https://paperswithcode.com/method/axial", "graph attention network": "https://paperswithcode.com/method/gat", "feedback transformer": "https://paperswithcode.com/method/feedback-transformer", "adaptive label smoothing": "https://paperswithcode.com/method/als", "serlu": "https://paperswithcode.com/method/serlu", "window-based discriminator": "https://paperswithcode.com/method/window-based-discriminator", "carla: an open urban driving simulator": "https://paperswithcode.com/method/carla", "highway network": "https://paperswithcode.com/method/highway-network", "gated recurrent unit": "https://paperswithcode.com/method/gru", "resnet-d": "https://paperswithcode.com/method/resnet-d", "temporal activation regularization": "https://paperswithcode.com/method/temporal-activation-regularization", "sasa": "https://paperswithcode.com/method/sasa", "stand-alone self attention": "https://paperswithcode.com/method/sasa", "infogan": "https://paperswithcode.com/method/infogan", "awd-lstm": "https://paperswithcode.com/method/awd-lstm", "asgd weight-dropped lstm": "https://paperswithcode.com/method/awd-lstm", "mxmnet": "https://paperswithcode.com/method/mxmnet", "multiplex molecular graph neural network": "https://paperswithcode.com/method/mxmnet", "hardtanh activation": "https://paperswithcode.com/method/hardtanh-activation", "eesp": "https://paperswithcode.com/method/eesp", "extremely efficient spatial pyramid of depth-wise dilated separable convolutions": "https://paperswithcode.com/method/eesp", "cida": "https://paperswithcode.com/method/cida", "continuously indexed domain adaptation": "https://paperswithcode.com/method/cida", "slime mould algorithm": "https://paperswithcode.com/method/slime-mould-algorithm-sma", "revnet": "https://paperswithcode.com/method/revnet", "byte pair encoding": "https://paperswithcode.com/method/bpe", "triplet entropy loss": "https://paperswithcode.com/method/tel", "multi-head attention": "https://paperswithcode.com/method/multi-head-attention", "inception-resnet-v2": "https://paperswithcode.com/method/inception-resnet-v2", "realnvp": "https://paperswithcode.com/method/realnvp", "madgrad": "https://paperswithcode.com/method/madgrad", "momentumized, adaptive, dual averaged gradient": "https://paperswithcode.com/method/madgrad", "two-way dense layer": "https://paperswithcode.com/method/two-way-dense-layer", "hunger games search": "https://paperswithcode.com/method/hunger-games-search-hgs", "pyramidnet": "https://paperswithcode.com/method/pyramidnet", "mixture of softmaxes": "https://paperswithcode.com/method/mos", "hdcgan": "https://paperswithcode.com/method/hdcgan", "high-resolution deep convolutional generative adversarial networks": "https://paperswithcode.com/method/hdcgan", "admm": "https://paperswithcode.com/method/admm", "alternating direction method of multipliers": "https://paperswithcode.com/method/admm", "lookahead": "https://paperswithcode.com/method/lookahead", "espnet": "https://paperswithcode.com/method/espnet", "set transformer": "https://paperswithcode.com/method/set-transformer", "decorrelated batch normalization": "https://paperswithcode.com/method/decorrelated-batch-normalization", "anti-alias downsampling": "https://paperswithcode.com/method/anti-alias-downsampling", "shufflenet v2 block": "https://paperswithcode.com/method/shufflenet-v2-block", "codeslam": "https://paperswithcode.com/method/codeslam", "stylegan": "https://paperswithcode.com/method/stylegan", "gan least squares loss": "https://paperswithcode.com/method/gan-least-squares-loss", "ckconv": "https://paperswithcode.com/method/ckconv", "continuous kernel convolution": "https://paperswithcode.com/method/ckconv", "ic-sbp": "https://paperswithcode.com/method/ic-sbp", "instance colouring stick-breaking process": "https://paperswithcode.com/method/ic-sbp", "guided anchoring": "https://paperswithcode.com/method/guided-anchoring", "fsaf": "https://paperswithcode.com/method/fsaf", "genetic algorithms": "https://paperswithcode.com/method/ga", "greedynas-a": "https://paperswithcode.com/method/greedynas-a", "ttur": "https://paperswithcode.com/method/ttur", "two time-scale update rule": "https://paperswithcode.com/method/ttur", "shufflenet": "https://paperswithcode.com/method/shufflenet", "supervised contrastive loss": "https://paperswithcode.com/method/supervised-contrastive-loss", "detnasnet": "https://paperswithcode.com/method/detnasnet", "sagan": "https://paperswithcode.com/method/sagan", "self-attention gan": "https://paperswithcode.com/method/sagan", "cutout": "https://paperswithcode.com/method/cutout", "snail": "https://paperswithcode.com/method/snail", "simple neural attention meta-learner": "https://paperswithcode.com/method/snail", "yolov4": "https://paperswithcode.com/method/yolov4", "detnas": "https://paperswithcode.com/method/detnas", "squeezenet": "https://paperswithcode.com/method/squeezenet", "roberta": "https://paperswithcode.com/method/roberta", "residual normal distribution": "https://paperswithcode.com/method/residual-normal-distribution", "sgdw": "https://paperswithcode.com/method/sgdw", "gan hinge loss": "https://paperswithcode.com/method/gan-hinge-loss", "retrace": "https://paperswithcode.com/method/retrace", "mobilenetv3": "https://paperswithcode.com/method/mobilenetv3", "cpc v2": "https://paperswithcode.com/method/cpc-v2", "fractalnet": "https://paperswithcode.com/method/fractalnet", "ape-x": "https://paperswithcode.com/method/ape-x", "hfpso": "https://paperswithcode.com/method/hfpso", "hybrid firefly and particle swarm optimization": "https://paperswithcode.com/method/hfpso", "netadapt": "https://paperswithcode.com/method/netadapt", "mckernel": "https://paperswithcode.com/method/mckernel", "sparse convolutions": "https://paperswithcode.com/method/sparse-convolutions", "dilated causal convolution": "https://paperswithcode.com/method/dilated-causal-convolution", "adashift": "https://paperswithcode.com/method/adashift", "characterbert": "https://paperswithcode.com/method/characterbert", "3d convolution": "https://paperswithcode.com/method/3d-convolution", "context2vec": "https://paperswithcode.com/method/context2vec", "pelu": "https://paperswithcode.com/method/pelu", "parametric exponential linear unit": "https://paperswithcode.com/method/pelu", "feedback memory": "https://paperswithcode.com/method/feedback-memory", "sandwich transformer": "https://paperswithcode.com/method/sandwich-transformer", "multilingual universal sentence encoder": "https://paperswithcode.com/method/use", "dynamic smoothl1 loss": "https://paperswithcode.com/method/dynamic-smoothl1-loss", "muzero": "https://paperswithcode.com/method/muzero", "maml": "https://paperswithcode.com/method/maml", "model-agnostic meta-learning": "https://paperswithcode.com/method/maml", "online normalization": "https://paperswithcode.com/method/onlinenorm", "taypo": "https://paperswithcode.com/method/taypo", "taylor expansion policy optimization": "https://paperswithcode.com/method/taypo", "invertible rescaling network": "https://paperswithcode.com/method/irn", "manifold mixup": "https://paperswithcode.com/method/manifold-mixup", "pointrend": "https://paperswithcode.com/method/pointrend", "deeplabv3": "https://paperswithcode.com/method/deeplabv3", "contrastive predictive coding": "https://paperswithcode.com/method/contrastive-predictive-coding", "infonce": "https://paperswithcode.com/method/infonce", "hbmp": "https://paperswithcode.com/method/hbmp", "hierarchical bilstm max pooling": "https://paperswithcode.com/method/hbmp", "arcface": "https://paperswithcode.com/method/arcface", "additive angular margin loss": "https://paperswithcode.com/method/arcface", "symbolic deep learning": "https://paperswithcode.com/method/symbolic-deep-learning", "off-diagonal orthogonal regularization": "https://paperswithcode.com/method/off-diagonal-orthogonal-regularization", "atss": "https://paperswithcode.com/method/atss", "adaptive training sample selection": "https://paperswithcode.com/method/atss", "impala": "https://paperswithcode.com/method/impala", "dpn block": "https://paperswithcode.com/method/dpn-block", "base boosting": "https://paperswithcode.com/method/base-boosting", "self-organizing map": "https://paperswithcode.com/method/som", "pixelcnn": "https://paperswithcode.com/method/pixelcnn", "bifpn": "https://paperswithcode.com/method/bifpn", "dynamicconv": "https://paperswithcode.com/method/dynamicconv", "dynamic convolution": "https://paperswithcode.com/method/dynamicconv", "tinynet": "https://paperswithcode.com/method/tinynet", "model rubik's cube: twisting resolution, depth and width for tinynets": "https://paperswithcode.com/method/tinynet", "location-based attention": "https://paperswithcode.com/method/location-based-attention", "euclidean norm regularization": "https://paperswithcode.com/method/euclidean-norm-regularization", "dice unit": "https://paperswithcode.com/method/dice-unit", "accuracy-robustness area (ara)": "https://paperswithcode.com/method/accuracy-robustness-area-ara", "accuracy-robustness area": "https://paperswithcode.com/method/accuracy-robustness-area-ara", "smote": "https://paperswithcode.com/method/smote", "synthetic minority over-sampling technique.": "https://paperswithcode.com/method/smote", "r-cnn": "https://paperswithcode.com/method/r-cnn", "deterministic policy gradient": "https://paperswithcode.com/method/dpg", "compressed memory": "https://paperswithcode.com/method/compressed-memory", "fixres": "https://paperswithcode.com/method/fixres", "byol": "https://paperswithcode.com/method/byol", "bootstrap your own latent": "https://paperswithcode.com/method/byol", "introspective adversarial network": "https://paperswithcode.com/method/ian", "pca whitening": "https://paperswithcode.com/method/pca-whitening", "hardelish": "https://paperswithcode.com/method/hardelish", "switchable atrous convolution": "https://paperswithcode.com/method/sac", "spatial group-wise enhance": "https://paperswithcode.com/method/spatial-group-wise-enhance", "multiplicative attention": "https://paperswithcode.com/method/multiplicative-attention", "gradient clipping": "https://paperswithcode.com/method/gradient-clipping", "explanation vs attention": "https://paperswithcode.com/method/explanation-vs-attention", "explanation vs attention: a two-player game to obtain attention for vqa": "https://paperswithcode.com/method/explanation-vs-attention", "single-path nas": "https://paperswithcode.com/method/single-path-nas", "darts max-w": "https://paperswithcode.com/method/darts-max-w", "differentiable architecture search max-w": "https://paperswithcode.com/method/darts-max-w", "differential attention for visual question answering": "https://paperswithcode.com/method/differential-attention-for-visual-question", "efficient spatial pyramid": "https://paperswithcode.com/method/esp", "enet bottleneck": "https://paperswithcode.com/method/enet-bottleneck", "transformer decoder": "https://paperswithcode.com/method/t-d", "levenshtein transformer": "https://paperswithcode.com/method/levenshtein-transformer", "sarsa lambda": "https://paperswithcode.com/method/sarsa-lambda", "mdpo": "https://paperswithcode.com/method/mdpo", "mirror descent policy optimization": "https://paperswithcode.com/method/mdpo", "r-fcn": "https://paperswithcode.com/method/r-fcn", "region-based fully convolutional network": "https://paperswithcode.com/method/r-fcn", "sngan": "https://paperswithcode.com/method/sngan", "spectrally normalised gan": "https://paperswithcode.com/method/sngan", "fast-yolov3": "https://paperswithcode.com/method/fast-yolov3", "ape-x dqn": "https://paperswithcode.com/method/ape-x-dqn", "random search": "https://paperswithcode.com/method/random-search", "prelu-net": "https://paperswithcode.com/method/prelu-net", "relu6": "https://paperswithcode.com/method/relu6", "depthwise separable convolution": "https://paperswithcode.com/method/depthwise-separable-convolution", "lstm": "https://paperswithcode.com/method/lstm", "long short-term memory": "https://paperswithcode.com/method/lstm", "tgan": "https://paperswithcode.com/method/tgan", "double q-learning": "https://paperswithcode.com/method/double-q-learning", "re-net": "https://paperswithcode.com/method/re-net", "recurrent event network": "https://paperswithcode.com/method/re-net", "wgan-gp loss": "https://paperswithcode.com/method/wgan-gp-loss", "yolov1": "https://paperswithcode.com/method/yolov1", "cornernet-squeeze hourglass": "https://paperswithcode.com/method/cornernet-squeeze-hourglass", "active convolution": "https://paperswithcode.com/method/active-convolution", "cycle consistency loss": "https://paperswithcode.com/method/cycle-consistency-loss", "pafpn": "https://paperswithcode.com/method/pafpn", "exact fusion model": "https://paperswithcode.com/method/exact-fusion-model", "freeanchor": "https://paperswithcode.com/method/freeanchor", "mode normalization": "https://paperswithcode.com/method/mode-normalization", "contextualized topic models": "https://paperswithcode.com/method/contextual-topic-models", "linear discriminant analysis": "https://paperswithcode.com/method/lda", "style-based recalibration module": "https://paperswithcode.com/method/style-based-recalibration-module", "octave convolution": "https://paperswithcode.com/method/octave-convolution", "gradual self-training": "https://paperswithcode.com/method/gradual-self-training", "elmo": "https://paperswithcode.com/method/elmo", "cornernet-squeeze hourglass module": "https://paperswithcode.com/method/cornernet-squeeze-hourglass-module", "cvae": "https://paperswithcode.com/method/cvae", "conditional variational auto encoder": "https://paperswithcode.com/method/cvae", "deepmask": "https://paperswithcode.com/method/deepmask", "big-little module": "https://paperswithcode.com/method/big-little-module", "greedynas": "https://paperswithcode.com/method/greedynas", "cr-net": "https://paperswithcode.com/method/cr-net", "mutualguide": "https://paperswithcode.com/method/mutualguide", "mutual guidance": "https://paperswithcode.com/method/mutualguide", "densenet": "https://paperswithcode.com/method/densenet", "latent optimisation": "https://paperswithcode.com/method/latent-optimisation", "graph isomorphism network": "https://paperswithcode.com/method/gin", "stable rank normalization": "https://paperswithcode.com/method/srn", "gnncl": "https://paperswithcode.com/method/gnncl", "graph neural networks with continual learning": "https://paperswithcode.com/method/gnncl", "vovnetv2": "https://paperswithcode.com/method/vovnetv2", "regnetx": "https://paperswithcode.com/method/regnetx", "ltls": "https://paperswithcode.com/method/ltls", "log-time and log-space extreme classification": "https://paperswithcode.com/method/ltls", "truncation trick": "https://paperswithcode.com/method/truncation-trick", "condconv": "https://paperswithcode.com/method/condconv", "deep belief network": "https://paperswithcode.com/method/deep-belief-network", "wgan gp": "https://paperswithcode.com/method/wgan-gp", "wasserstein gan (gradient penalty)": "https://paperswithcode.com/method/wgan-gp", "sortcut sinkhorn attention": "https://paperswithcode.com/method/sortcut-sinkhorn-attention", "detnet": "https://paperswithcode.com/method/detnet", "high-level backbone": "https://paperswithcode.com/method/high-level-backbone", "big-little net": "https://paperswithcode.com/method/big-little-net", "alphastar": "https://paperswithcode.com/method/alphastar", "deepmind alphastar": "https://paperswithcode.com/method/alphastar", "weight decay": "https://paperswithcode.com/method/weight-decay", "nesterov accelerated gradient": "https://paperswithcode.com/method/nesterov-accelerated-gradient", "style transfer module": "https://paperswithcode.com/method/style-transfer-module", "modulated residual network": "https://paperswithcode.com/method/modern", "direct feedback alignment": "https://paperswithcode.com/method/dfa-1", "auxiliary batch normalization": "https://paperswithcode.com/method/auxiliary-batch-normalization", "spatialdropout": "https://paperswithcode.com/method/spatialdropout", "xception": "https://paperswithcode.com/method/xception", "dextr": "https://paperswithcode.com/method/dextr", "deep extreme cut": "https://paperswithcode.com/method/dextr", "adaptive softmax": "https://paperswithcode.com/method/adaptive-softmax", "spatio-temporal stability analysis": "https://paperswithcode.com/method/ts", "simclr": "https://paperswithcode.com/method/simclr", "natural gradient descent": "https://paperswithcode.com/method/natural-gradient-descent", "groupwise point convolution": "https://paperswithcode.com/method/groupwise-point-convolution", "local relation layer": "https://paperswithcode.com/method/local-relation-layer", "scnet": "https://paperswithcode.com/method/scnet", "ddpg": "https://paperswithcode.com/method/ddpg", "deep deterministic policy gradient": "https://paperswithcode.com/method/ddpg", "eligibility trace": "https://paperswithcode.com/method/eligibility-trace", "proxylessnet-gpu": "https://paperswithcode.com/method/proxylessnet-gpu", "random resized crop": "https://paperswithcode.com/method/randomresizedcrop", "deep boltzmann machine": "https://paperswithcode.com/method/deep-boltzmann-machine", "dvd-gan": "https://paperswithcode.com/method/dvd-gan", "graph self-attention": "https://paperswithcode.com/method/graph-self-attention", "griffin-lim algorithm": "https://paperswithcode.com/method/griffin-lim-algorithm", "fast r-cnn": "https://paperswithcode.com/method/fast-r-cnn", "ensemble clustering": "https://paperswithcode.com/method/ensemble-clustering", "skip-gram word2vec": "https://paperswithcode.com/method/skip-gram-word2vec", "enhanced-multimodal fuzzy framework": "https://paperswithcode.com/method/emf", "entropy regularization": "https://paperswithcode.com/method/entropy-regularization", "vilbert": "https://paperswithcode.com/method/vilbert", "vision-and-language bert": "https://paperswithcode.com/method/vilbert", "deformable roi pooling": "https://paperswithcode.com/method/deformable-roi-pooling", "layer normalization": "https://paperswithcode.com/method/layer-normalization", "nt-asgd": "https://paperswithcode.com/method/nt-asgd", "non-monotonically triggered asgd": "https://paperswithcode.com/method/nt-asgd", "gblock": "https://paperswithcode.com/method/gblock", "k-means clustering": "https://paperswithcode.com/method/k-means-clustering", "holographic reduced representation": "https://paperswithcode.com/method/holographic-reduced-representation", "repvgg": "https://paperswithcode.com/method/repvgg", "population based augmentation": "https://paperswithcode.com/method/population-based-augmentation", "gait emotion recognition": "https://paperswithcode.com/method/ger", "acgpn": "https://paperswithcode.com/method/acgpn", "adaptive content generating and preserving network": "https://paperswithcode.com/method/acgpn", "neural turing machine": "https://paperswithcode.com/method/neural-turing-machine", "weight standardization": "https://paperswithcode.com/method/weight-standardization", "path length regularization": "https://paperswithcode.com/method/path-length-regularization", "dd-ppo": "https://paperswithcode.com/method/dd-ppo", "decentralized distributed proximal policy optimization": "https://paperswithcode.com/method/dd-ppo", "pointwise convolution": "https://paperswithcode.com/method/pointwise-convolution", "filter response normalization": "https://paperswithcode.com/method/filter-response-normalization", "slanted triangular learning rates": "https://paperswithcode.com/method/slanted-triangular-learning-rates", "dense block": "https://paperswithcode.com/method/dense-block", "resnest": "https://paperswithcode.com/method/resnest", "ed-gnn": "https://paperswithcode.com/method/ed-gnn", "medical entity disambiguation using graph neural networks": "https://paperswithcode.com/method/ed-gnn", "neural architecture search": "https://paperswithcode.com/method/neural-architecture-search", "ddsp": "https://paperswithcode.com/method/ddsp", "differentiable digital signal processing": "https://paperswithcode.com/method/ddsp", "gated linear unit": "https://paperswithcode.com/method/glu", "setse": "https://paperswithcode.com/method/setse", "strain elevation tension spring embedding": "https://paperswithcode.com/method/setse", "roialign": "https://paperswithcode.com/method/roi-align", "deformable position-sensitive roi pooling": "https://paperswithcode.com/method/deformable-position-sensitive-roi-pooling", "fractal block": "https://paperswithcode.com/method/fractal-block", "fmix": "https://paperswithcode.com/method/fmix", "recursive feature pyramid": "https://paperswithcode.com/method/rfp", "routing attention": "https://paperswithcode.com/method/routed-attention", "hyperdensenet": "https://paperswithcode.com/method/hyperdensenet", "pointnet": "https://paperswithcode.com/method/pointnet", "minimum description length": "https://paperswithcode.com/method/mdl", "groie": "https://paperswithcode.com/method/groie", "generic roi extractor": "https://paperswithcode.com/method/groie", "scale aggregation block": "https://paperswithcode.com/method/scale-aggregation-block", "precise roi pooling": "https://paperswithcode.com/method/precise-roi-pooling", "variational dropout": "https://paperswithcode.com/method/variational-dropout", "ikshananet": "https://paperswithcode.com/method/ikshananet", "ikshana: a theory of human scene understanding mechanism": "https://paperswithcode.com/method/ikshananet", "enet dilated bottleneck": "https://paperswithcode.com/method/enet-dilated-bottleneck", "selective kernel convolution": "https://paperswithcode.com/method/selective-kernel-convolution", "prioritized sweeping": "https://paperswithcode.com/method/prioritized-sweeping", "selective search": "https://paperswithcode.com/method/selective-search", "dot-product attention": "https://paperswithcode.com/method/dot-product-attention", "pix2pix": "https://paperswithcode.com/method/pix2pix", "cdep": "https://paperswithcode.com/method/cdep", "contextual decomposition explanation penalization": "https://paperswithcode.com/method/cdep", "spatial attention-guided mask": "https://paperswithcode.com/method/spatial-attention-guided-mask", "segnet": "https://paperswithcode.com/method/segnet", "group normalization": "https://paperswithcode.com/method/group-normalization", "exponential decay": "https://paperswithcode.com/method/exponential-decay", "enet": "https://paperswithcode.com/method/enet", "leaky relu": "https://paperswithcode.com/method/leaky-relu", "prioritized experience replay": "https://paperswithcode.com/method/prioritized-experience-replay", "dilated convolution": "https://paperswithcode.com/method/dilated-convolution", "paranet convolution block": "https://paperswithcode.com/method/paranet-convolution-block", "lsh attention": "https://paperswithcode.com/method/lsh-attention", "locality sensitive hashing attention": "https://paperswithcode.com/method/lsh-attention", "amsgrad": "https://paperswithcode.com/method/amsgrad", "e-swish": "https://paperswithcode.com/method/e-swish", "stochastic weight averaging": "https://paperswithcode.com/method/stochastic-weight-averaging", "sknet": "https://paperswithcode.com/method/sknet", "demon cm": "https://paperswithcode.com/method/demon-cm", "global context block": "https://paperswithcode.com/method/global-context-block", "adversarially learned inference": "https://paperswithcode.com/method/ali", "gaussian process": "https://paperswithcode.com/method/gaussian-process", "asaf": "https://paperswithcode.com/method/asaf", "adversarial soft advantage fitting": "https://paperswithcode.com/method/asaf", "sparse switchable normalization": "https://paperswithcode.com/method/sparse-switchable-normalization", "h3dnet": "https://paperswithcode.com/method/h3dnet", "rpdet": "https://paperswithcode.com/method/rpdet", "inception-resnet-v2-c": "https://paperswithcode.com/method/inception-resnet-v2-c", "gpt-3": "https://paperswithcode.com/method/gpt-3", "hrnet": "https://paperswithcode.com/method/hrnet", "ctc loss": "https://paperswithcode.com/method/ctc-loss", "connectionist temporal classification loss": "https://paperswithcode.com/method/ctc-loss", "neural probabilistic language model": "https://paperswithcode.com/method/neural-probabilistic-language-model", "nerf": "https://paperswithcode.com/method/nerf", "neural radiance field": "https://paperswithcode.com/method/nerf", "transe": "https://paperswithcode.com/method/transe", "sparsemax": "https://paperswithcode.com/method/sparsemax", "wavegrad": "https://paperswithcode.com/method/wavegrad", "multigrain": "https://paperswithcode.com/method/multigrain", "sabl": "https://paperswithcode.com/method/sabl", "side-aware boundary localization": "https://paperswithcode.com/method/sabl", "dual path network": "https://paperswithcode.com/method/dpn", "shake-shake regularization": "https://paperswithcode.com/method/shake-shake-regularization", "discriminative regularization": "https://paperswithcode.com/method/discriminative-regularization", "temporal jittering": "https://paperswithcode.com/method/temporal-jittering", "delight block": "https://paperswithcode.com/method/delight-block", "bigan": "https://paperswithcode.com/method/bigan", "bidirectional gan": "https://paperswithcode.com/method/bigan", "crf-rnn": "https://paperswithcode.com/method/crf-rnn", "tsrus": "https://paperswithcode.com/method/tsrus", "inplace-abn": "https://paperswithcode.com/method/inplace-abn", "in-place activated batch normalization": "https://paperswithcode.com/method/inplace-abn", "harm-net": "https://paperswithcode.com/method/harm-net", "zero-padded shortcut connection": "https://paperswithcode.com/method/zero-padded-shortcut-connection", "mixing adam and sgd": "https://paperswithcode.com/method/mas", "greedynas-c": "https://paperswithcode.com/method/greedynas-c", "weight tying": "https://paperswithcode.com/method/weight-tying", "fire module": "https://paperswithcode.com/method/fire-module", "q-learning": "https://paperswithcode.com/method/q-learning", "fraternal dropout": "https://paperswithcode.com/method/fraternal-dropout", "res2net": "https://paperswithcode.com/method/res2net", "low-rank factorization-based multi-head attention": "https://paperswithcode.com/method/lama", "3d sa": "https://paperswithcode.com/method/3d-sa", "3 dimensional soft attention": "https://paperswithcode.com/method/3d-sa", "rotnet": "https://paperswithcode.com/method/rotnet", "yolov3": "https://paperswithcode.com/method/yolov3", "zoneout": "https://paperswithcode.com/method/zoneout", "flica": "https://paperswithcode.com/method/flica", "a framework for leader identification in coordinated activity": "https://paperswithcode.com/method/flica", "class-activation map": "https://paperswithcode.com/method/cam", "noisynet-dueling": "https://paperswithcode.com/method/noisynet-dueling", "graph transformer": "https://paperswithcode.com/method/graph-transformer", "nvae encoder residual cell": "https://paperswithcode.com/method/nvae-encoder-residual-cell", "thundernet": "https://paperswithcode.com/method/thundernet", "scalenet": "https://paperswithcode.com/method/scalenet", "hierarchical feature fusion": "https://paperswithcode.com/method/hierarchical-feature-fusion", "vovnet": "https://paperswithcode.com/method/vovnet", "mixconv": "https://paperswithcode.com/method/mixconv", "mixed depthwise convolution": "https://paperswithcode.com/method/mixconv", "triplet loss": "https://paperswithcode.com/method/triplet-loss", "dynamic memory network": "https://paperswithcode.com/method/dynamic-memory-network", "distilbert": "https://paperswithcode.com/method/distillbert", "silu": "https://paperswithcode.com/method/silu", "sigmoid linear unit": "https://paperswithcode.com/method/silu", "actkr": "https://paperswithcode.com/method/actkr", "global convolutional network": "https://paperswithcode.com/method/global-convolutional-network", "adabound": "https://paperswithcode.com/method/adabound", "dropout": "https://paperswithcode.com/method/dropout", "wavegan": "https://paperswithcode.com/method/wavegan", "fbnet block": "https://paperswithcode.com/method/fbnet-block", "1x1 convolution": "https://paperswithcode.com/method/1x1-convolution", "cbnet": "https://paperswithcode.com/method/cbnet", "composite backbone network": "https://paperswithcode.com/method/cbnet", "deformable convolution": "https://paperswithcode.com/method/deformable-convolution", "noisy linear layer": "https://paperswithcode.com/method/noisy-net", "linear regression": "https://paperswithcode.com/method/linear-regression", "expected sarsa": "https://paperswithcode.com/method/expected-sarsa", "detr": "https://paperswithcode.com/method/detr", "detection transformer": "https://paperswithcode.com/method/detr", "random horizontal flip": "https://paperswithcode.com/method/randomhorizontalflip", "activation regularization": "https://paperswithcode.com/method/activation-regularization", "laplacian pe": "https://paperswithcode.com/method/laplacian-pe", "laplacian positional encodings": "https://paperswithcode.com/method/laplacian-pe", "softmax": "https://paperswithcode.com/method/softmax", "early exiting": "https://paperswithcode.com/method/early-exiting", "early exiting using confidence measures": "https://paperswithcode.com/method/early-exiting", "cgnn": "https://paperswithcode.com/method/cgnn", "crystal graph neural network": "https://paperswithcode.com/method/cgnn", "cbhg": "https://paperswithcode.com/method/cbhg", "td-gammon": "https://paperswithcode.com/method/td-gammon", "dense connections": "https://paperswithcode.com/method/dense-connections", "kaiming initialization": "https://paperswithcode.com/method/he-initialization", "bigbigan": "https://paperswithcode.com/method/bigbigan", "grid r-cnn": "https://paperswithcode.com/method/grid-r-cnn", "logistic regression": "https://paperswithcode.com/method/logistic-regression", "ghost bottleneck": "https://paperswithcode.com/method/ghost-bottleneck", "proxylessnet-cpu": "https://paperswithcode.com/method/proxylessnet-cpu", "xlnet": "https://paperswithcode.com/method/xlnet", "hard swish": "https://paperswithcode.com/method/hard-swish", "softsign activation": "https://paperswithcode.com/method/softsign-activation", "crelu": "https://paperswithcode.com/method/crelu", "dilated bottleneck block": "https://paperswithcode.com/method/dilated-bottleneck-block", "imgep": "https://paperswithcode.com/method/imgep", "intrinsically motivated goal exploration processes": "https://paperswithcode.com/method/imgep", "adaptive parameter-wise diagonal quasi-newton method": "https://paperswithcode.com/method/apollo", "feature intertwiner": "https://paperswithcode.com/method/feature-intertwiner", "poincar\u00e9 embeddings": "https://paperswithcode.com/method/poincare-embeddings", "siamese u-net": "https://paperswithcode.com/method/siamese-u-net", "elastic dense block": "https://paperswithcode.com/method/elastic-dense-block", "recurrent entity network": "https://paperswithcode.com/method/recurrent-entity-network", "darknet-53": "https://paperswithcode.com/method/darknet-53", "non-linear independent component estimation": "https://paperswithcode.com/method/nice", "attention dropout": "https://paperswithcode.com/method/attention-dropout", "fbnet": "https://paperswithcode.com/method/fbnet", "r1 regularization": "https://paperswithcode.com/method/r1-regularization", "grarep": "https://paperswithcode.com/method/grarep", "graph representation with global structure": "https://paperswithcode.com/method/grarep", "dynamic r-cnn": "https://paperswithcode.com/method/dynamic-r-cnn", "memory network": "https://paperswithcode.com/method/memory-network", "syncbn": "https://paperswithcode.com/method/syncbn", "synchronized batch normalization": "https://paperswithcode.com/method/syncbn", "activation normalization": "https://paperswithcode.com/method/activation-normalization", "diou-nms": "https://paperswithcode.com/method/diou-nms", "depthwise dilated separable convolution": "https://paperswithcode.com/method/depthwise-dilated-separable-convolution", "greedynas-b": "https://paperswithcode.com/method/greedynas-b", "graph infoclust": "https://paperswithcode.com/method/gic", "adagrad": "https://paperswithcode.com/method/adagrad", "bilateral grid": "https://paperswithcode.com/method/bilateral-grid", "densenet-elastic": "https://paperswithcode.com/method/densenet-elastic", "position-sensitive roi pooling": "https://paperswithcode.com/method/position-sensitive-roi-pooling", "adaptively sparse transformer": "https://paperswithcode.com/method/adaptively-sparse-transformer", "trivd-gan": "https://paperswithcode.com/method/trivd-gan", "receptive field block": "https://paperswithcode.com/method/rfb", "restricted boltzmann machine": "https://paperswithcode.com/method/restricted-boltzmann-machine", "prelu": "https://paperswithcode.com/method/prelu", "parameterized relu": "https://paperswithcode.com/method/prelu", "adahessian": "https://paperswithcode.com/method/adahessian", "global and sliding window attention": "https://paperswithcode.com/method/global-and-sliding-window-attention", "proxylessnet-mobile": "https://paperswithcode.com/method/proxylessnet-mobile", "probabilistic anchor assignment": "https://paperswithcode.com/method/probabilistic-anchor-assignment", "randwire": "https://paperswithcode.com/method/randwire", "deeplab": "https://paperswithcode.com/method/deeplab", "augmix": "https://paperswithcode.com/method/augmix", "s-gcn": "https://paperswithcode.com/method/s-gcn", "spherical graph convolutional network": "https://paperswithcode.com/method/s-gcn", "scatnet": "https://paperswithcode.com/method/scatnet", "scattering transform": "https://paperswithcode.com/method/scatnet", "gradient checkpointing": "https://paperswithcode.com/method/gradient-checkpointing", "enet initial block": "https://paperswithcode.com/method/enet-initial-block", "mobilenetv1": "https://paperswithcode.com/method/mobilenetv1", "hopfield layer": "https://paperswithcode.com/method/hopfield-layer", "pointer network": "https://paperswithcode.com/method/pointer-net", "cp conv": "https://paperswithcode.com/method/cp-conv", "center-pivot convolution": "https://paperswithcode.com/method/cp-conv", "zca whitening": "https://paperswithcode.com/method/zca-whitening", "cornernet": "https://paperswithcode.com/method/cornernet", "linear warmup": "https://paperswithcode.com/method/linear-warmup", "composite fields": "https://paperswithcode.com/method/composite-fields", "softplus": "https://paperswithcode.com/method/softplus", "adaptive loss": "https://paperswithcode.com/method/adaptive-loss", "adaptive robust loss": "https://paperswithcode.com/method/adaptive-loss", "panet": "https://paperswithcode.com/method/panet", "global average pooling": "https://paperswithcode.com/method/global-average-pooling", "procan": "https://paperswithcode.com/method/procan", "progressive growing channel attentive non-local network": "https://paperswithcode.com/method/procan", "clrnet": "https://paperswithcode.com/method/clrnet", "convolutional lstm based residual network": "https://paperswithcode.com/method/clrnet", "dutch eligibility trace": "https://paperswithcode.com/method/dutch-eligibility-trace", "scatter connection": "https://paperswithcode.com/method/scatter-connection", "pyramid pooling module": "https://paperswithcode.com/method/pyramid-pooling-module", "l1 regularization": "https://paperswithcode.com/method/l1-regularization", "symbolic rule learning": "https://paperswithcode.com/method/symbolic-rule-learning", "mnasnet": "https://paperswithcode.com/method/mnasnet", "nas-fpn": "https://paperswithcode.com/method/nas-fpn", "epsilon greedy exploration": "https://paperswithcode.com/method/epsilon-greedy-exploration", "lecun's tanh": "https://paperswithcode.com/method/lecun-s-tanh", "bottleneck transformer": "https://paperswithcode.com/method/bottleneck-transformer", "mrnn": "https://paperswithcode.com/method/mrnn", "multiplicative rnn": "https://paperswithcode.com/method/mrnn", "clusterfit": "https://paperswithcode.com/method/clusterfit", "ccnet": "https://paperswithcode.com/method/ccnet", "criss-cross network": "https://paperswithcode.com/method/ccnet", "polyak averaging": "https://paperswithcode.com/method/polyak-averaging", "cbow word2vec": "https://paperswithcode.com/method/cbow-word2vec", "continuous bag-of-words word2vec": "https://paperswithcode.com/method/cbow-word2vec", "convlstm": "https://paperswithcode.com/method/convlstm", "sarsa": "https://paperswithcode.com/method/sarsa", "td lambda": "https://paperswithcode.com/method/td-lambda", "moga-c": "https://paperswithcode.com/method/moga-c", "multiple random window discriminator": "https://paperswithcode.com/method/multiple-random-window-discriminator", "population based training": "https://paperswithcode.com/method/population-based-training", "vq-vae-2": "https://paperswithcode.com/method/vq-vae-2", "pixelrnn": "https://paperswithcode.com/method/pixelrnn", "pixel recurrent neural network": "https://paperswithcode.com/method/pixelrnn", "non-local operation": "https://paperswithcode.com/method/non-local-operation", "dblock": "https://paperswithcode.com/method/dblock", "effective squeeze-and-excitation block": "https://paperswithcode.com/method/effective-squeeze-and-excitation-block", "copy-paste": "https://paperswithcode.com/method/copy-paste", "simple copy-paste": "https://paperswithcode.com/method/copy-paste", "spectral dropout": "https://paperswithcode.com/method/spectral-dropout", "u-cam": "https://paperswithcode.com/method/u-cam", "uncertainty class activation map (u-cam) using gradient certainty method": "https://paperswithcode.com/method/u-cam", "nas-fcos": "https://paperswithcode.com/method/nas-fcos", "sanet": "https://paperswithcode.com/method/sanet", "self-attention network": "https://paperswithcode.com/method/sanet", "daspp": "https://paperswithcode.com/method/daspp", "deeper atrous spatial pyramid pooling": "https://paperswithcode.com/method/daspp", "transposed convolution": "https://paperswithcode.com/method/transposed-convolution", "selu": "https://paperswithcode.com/method/selu", "scaled exponential linear unit": "https://paperswithcode.com/method/selu", "fast-ocr": "https://paperswithcode.com/method/fast-ocr", "residual srm": "https://paperswithcode.com/method/residual-srm", "stochastic gradient variational bayes": "https://paperswithcode.com/method/stochastic-gradient-variational-bayes", "d4pg": "https://paperswithcode.com/method/d4pg", "distributed distributional ddpg": "https://paperswithcode.com/method/d4pg", "scarlet-nas": "https://paperswithcode.com/method/scarlet-nas", "high-resolution input": "https://paperswithcode.com/method/high-resolution-input", "wavetts": "https://paperswithcode.com/method/wavetts", "ghost module": "https://paperswithcode.com/method/ghost-module", "distributed shampoo": "https://paperswithcode.com/method/distributed-shampoo", "retinanet": "https://paperswithcode.com/method/retinanet", "alis": "https://paperswithcode.com/method/alis", "aligning latent and image spaces": "https://paperswithcode.com/method/alis", "ffmv1": "https://paperswithcode.com/method/ffmv1", "feature fusion module v1": "https://paperswithcode.com/method/ffmv1", "contextual word vectors": "https://paperswithcode.com/method/cove", "maxup": "https://paperswithcode.com/method/maxup", "pisa": "https://paperswithcode.com/method/pisa", "prime sample attention": "https://paperswithcode.com/method/pisa", "concatenated skip connection": "https://paperswithcode.com/method/concatenated-skip-connection", "generative adversarial network": "https://paperswithcode.com/method/gan", "videobert": "https://paperswithcode.com/method/videobert", "lipschitz constant constraint": "https://paperswithcode.com/method/lcc", "early stopping": "https://paperswithcode.com/method/early-stopping", "tanhexp": "https://paperswithcode.com/method/tanhexp", "tanh exponential activation function": "https://paperswithcode.com/method/tanhexp", "u-net": "https://paperswithcode.com/method/u-net", "metropolis hastings": "https://paperswithcode.com/method/metropolis-hastings", "tsruc": "https://paperswithcode.com/method/tsruc", "rainbow dqn": "https://paperswithcode.com/method/rainbow-dqn", "biggan": "https://paperswithcode.com/method/biggan", "wgan": "https://paperswithcode.com/method/wgan", "wasserstein gan": "https://paperswithcode.com/method/wgan", "lrnet": "https://paperswithcode.com/method/lrnet", "local relation network": "https://paperswithcode.com/method/lrnet", "siamese network": "https://paperswithcode.com/method/siamese-network", "hierarchical softmax": "https://paperswithcode.com/method/hierarchical-softmax", "adamw": "https://paperswithcode.com/method/adamw", "gumbel softmax": "https://paperswithcode.com/method/gumbel-softmax", "feature pyramid network": "https://paperswithcode.com/method/fpn", "advprop": "https://paperswithcode.com/method/advprop", "dimconv": "https://paperswithcode.com/method/dimconv", "dimension-wise convolution": "https://paperswithcode.com/method/dimconv", "inception-b": "https://paperswithcode.com/method/inception-b", "shufflenet block": "https://paperswithcode.com/method/shufflenet-block", "mixup": "https://paperswithcode.com/method/mixup", "vertex similarity embeddings": "https://paperswithcode.com/method/verse", "pcida": "https://paperswithcode.com/method/pcida", "probabilistic continuously indexed domain adaptation": "https://paperswithcode.com/method/pcida", "bridge-net": "https://paperswithcode.com/method/bridge-net", "agglomerative contextual decomposition": "https://paperswithcode.com/method/hierarchical-dnn-interpretations", "unigram segmentation": "https://paperswithcode.com/method/unigram-segmentation", "additive attention": "https://paperswithcode.com/method/additive-attention", "cspdarknet53": "https://paperswithcode.com/method/cspdarknet53", "part-based convolutional baseline": "https://paperswithcode.com/method/pcb", "embedded dot product affinity": "https://paperswithcode.com/method/embedded-dot-product-affinity", "sfam": "https://paperswithcode.com/method/sfam", "scale-wise feature aggregation module": "https://paperswithcode.com/method/sfam", "dcgan": "https://paperswithcode.com/method/dcgan", "deep convolutional gan": "https://paperswithcode.com/method/dcgan", "singular value clipping": "https://paperswithcode.com/method/singular-value-clipping", "conditional batch normalization": "https://paperswithcode.com/method/conditional-batch-normalization", "pirl": "https://paperswithcode.com/method/pirl", "dense synthesized attention": "https://paperswithcode.com/method/dense-synthesized-attention", "cornernet-squeeze": "https://paperswithcode.com/method/cornernet-squeeze", "inception-v3 module": "https://paperswithcode.com/method/inception-v3-module", "aspp": "https://paperswithcode.com/method/aspp", "atrous spatial pyramid pooling": "https://paperswithcode.com/method/aspp", "local contrast normalization": "https://paperswithcode.com/method/local-contrast-normalization", "vq-vae": "https://paperswithcode.com/method/vq-vae", "true online td lambda": "https://paperswithcode.com/method/true-online-td-lambda", "carafe": "https://paperswithcode.com/method/carafe", "xavier initialization": "https://paperswithcode.com/method/xavier-initialization", "balanced feature pyramid": "https://paperswithcode.com/method/balanced-feature-pyramid", "adasqrt": "https://paperswithcode.com/method/adasqrt", "hard sigmoid": "https://paperswithcode.com/method/hard-sigmoid", "hit-detector": "https://paperswithcode.com/method/hit-detector", "rgcn": "https://paperswithcode.com/method/rgcn", "relational graph convolution network": "https://paperswithcode.com/method/rgcn", "nvae generative residual cell": "https://paperswithcode.com/method/nvae-generative-residual-cell", "demon adam": "https://paperswithcode.com/method/demon-adam", "ggs-nns": "https://paperswithcode.com/method/ggnn", "gated graph sequence neural networks": "https://paperswithcode.com/method/ggnn", "hmgnn": "https://paperswithcode.com/method/hmgnn", "heterogeneous molecular graph neural network": "https://paperswithcode.com/method/hmgnn", "tridentnet": "https://paperswithcode.com/method/tridentnet", "minibatch discrimination": "https://paperswithcode.com/method/minibatch-discrimination", "swav": "https://paperswithcode.com/method/swav", "swapping assignments between views": "https://paperswithcode.com/method/swav", "pyramidal residual unit": "https://paperswithcode.com/method/pyramidal-residual-unit", "adversarial model perturbation": "https://paperswithcode.com/method/amp", "sha-rnn": "https://paperswithcode.com/method/sha-rnn", "single headed attention rnn": "https://paperswithcode.com/method/sha-rnn", "cbam": "https://paperswithcode.com/method/cbam", "convolutional block attention module": "https://paperswithcode.com/method/cbam", "depthwise fire module": "https://paperswithcode.com/method/depthwise-fire-module", "sagan self-attention module": "https://paperswithcode.com/method/sagan-attention-module", "stochastic gradient descent": "https://paperswithcode.com/method/sgd", "squeeze-and-excitation block": "https://paperswithcode.com/method/squeeze-and-excitation-block", "kernel activation function": "https://paperswithcode.com/method/kaf", "factor graph attention": "https://paperswithcode.com/method/fga", "attention-augmented convolution": "https://paperswithcode.com/method/attention-augmented-convolution", "faster r-cnn": "https://paperswithcode.com/method/faster-r-cnn", "non maximum suppression": "https://paperswithcode.com/method/non-maximum-suppression", "pixelshuffle": "https://paperswithcode.com/method/pixelshuffle", "ohem": "https://paperswithcode.com/method/ohem", "online hard example mining": "https://paperswithcode.com/method/ohem", "directional sparse filtering": "https://paperswithcode.com/method/directional-sparse-filtering", "differentiable nas": "https://paperswithcode.com/method/differentiable-nas", "differentiable neural architecture search": "https://paperswithcode.com/method/dnas", "proxylessnas": "https://paperswithcode.com/method/proxylessnas", "causal inference": "https://paperswithcode.com/method/causal-inference", "hierarchical vae": "https://paperswithcode.com/method/hierarchical-vae", "hierarchical variational autoencoder": "https://paperswithcode.com/method/hierarchical-vae", "pafs": "https://paperswithcode.com/method/pafs", "part affinity fields": "https://paperswithcode.com/method/pafs", "feature-centric voting": "https://paperswithcode.com/method/feature-centric-voting", "adaptive instance normalization": "https://paperswithcode.com/method/adaptive-instance-normalization", "embedded gaussian affinity": "https://paperswithcode.com/method/embedded-gaussian-affinity", "pointer sentinel-lstm": "https://paperswithcode.com/method/pointer-sentinel-lstm", "iou-balanced sampling": "https://paperswithcode.com/method/iou-balanced-sampling", "self-adversarial negative sampling": "https://paperswithcode.com/method/self-adversarial-negative-sampling", "normalizing flows": "https://paperswithcode.com/method/normalizing-flows", "enhanced fusion framework": "https://paperswithcode.com/method/trad-bci", "v-trace": "https://paperswithcode.com/method/v-trace", "channel attention module": "https://paperswithcode.com/method/channel-attention-module", "tacotron": "https://paperswithcode.com/method/tacotron", "concrete dropout": "https://paperswithcode.com/method/concrete-dropout", "lenet": "https://paperswithcode.com/method/lenet", "densenas-b": "https://paperswithcode.com/method/densenas-b", "scheduleddroppath": "https://paperswithcode.com/method/scheduleddroppath", "alexnet": "https://paperswithcode.com/method/alexnet", "biggan-deep": "https://paperswithcode.com/method/biggan-deep", "generalized focal loss": "https://paperswithcode.com/method/generalized-focal-loss", "conditional instance normalization": "https://paperswithcode.com/method/conditional-instance-normalization", "adafactor": "https://paperswithcode.com/method/adafactor", "multi-attention network": "https://paperswithcode.com/method/multi-attention-network", "colorjitter": "https://paperswithcode.com/method/colorjitter", "color jitter": "https://paperswithcode.com/method/colorjitter", "nystr\u00f6mformer": "https://paperswithcode.com/method/nystromformer", "dual multimodal attention": "https://paperswithcode.com/method/dma", "alp-gmm": "https://paperswithcode.com/method/alp-gmm", "absolute learning progress and gaussian mixture models for automatic curriculum learning": "https://paperswithcode.com/method/alp-gmm", "roiwarp": "https://paperswithcode.com/method/roiwarp", "ulmfit": "https://paperswithcode.com/method/ulmfit", "universal language model fine-tuning": "https://paperswithcode.com/method/ulmfit", "regnety": "https://paperswithcode.com/method/regnety", "unitary rnn": "https://paperswithcode.com/method/unitary-rnn", "residual gru": "https://paperswithcode.com/method/residual-gru", "adversarial soft advantage fitting (asaf)": "https://paperswithcode.com/method/adversarial-soft-advantage-fitting-asaf", "fcos": "https://paperswithcode.com/method/fcos", "varimpviann": "https://paperswithcode.com/method/varimpviann", "variance-based feature importance of artificial neural networks": "https://paperswithcode.com/method/varimpviann", "modrelu": "https://paperswithcode.com/method/modrelu", "grouped convolution": "https://paperswithcode.com/method/grouped-convolution", "surrogate lagrangian relaxation": "https://paperswithcode.com/method/slr", "bilstm": "https://paperswithcode.com/method/bilstm", "bidirectional lstm": "https://paperswithcode.com/method/bilstm", "random mutation search": "https://paperswithcode.com/method/random-mutation-search", "affine coupling": "https://paperswithcode.com/method/affine-coupling", "factorized dense synthesized attention": "https://paperswithcode.com/method/factorized-dense-synthesized-attention", "ghm-r": "https://paperswithcode.com/method/ghm-a", "gradient harmonizing mechanism r": "https://paperswithcode.com/method/ghm-a", "cascade corner pooling": "https://paperswithcode.com/method/cascade-corner-pooling", "bp-transformer": "https://paperswithcode.com/method/bp-transformer", "aggmo": "https://paperswithcode.com/method/aggmo", "batchboost": "https://paperswithcode.com/method/batchboost", "gated convolution": "https://paperswithcode.com/method/gated-convolution", "contrastive multiview coding": "https://paperswithcode.com/method/contrastive-multiview-coding", "deit": "https://paperswithcode.com/method/deit", "data-efficient image transformer": "https://paperswithcode.com/method/deit", "vfnet": "https://paperswithcode.com/method/varifocalnet", "varifocalnet": "https://paperswithcode.com/method/varifocalnet", "matrix-power normalization": "https://paperswithcode.com/method/mpn", "radam": "https://paperswithcode.com/method/radam", "hourglass module": "https://paperswithcode.com/method/hourglass-module", "multiscale dilated convolution block": "https://paperswithcode.com/method/multiscale-dilated-convolution-block", "srgan residual block": "https://paperswithcode.com/method/srgan-residual-block", "virtual batch normalization": "https://paperswithcode.com/method/virtual-batch-normalization", "routing transformer": "https://paperswithcode.com/method/routing-transformer", "csppeleenet": "https://paperswithcode.com/method/csppeleenet", "lr-net": "https://paperswithcode.com/method/lr-net", "rms pooling": "https://paperswithcode.com/method/rms-pooling", "root-of-mean-squared pooling": "https://paperswithcode.com/method/rms-pooling", "peleenet": "https://paperswithcode.com/method/peleenet", "sparse transformer": "https://paperswithcode.com/method/sparse-transformer", "hypernetwork": "https://paperswithcode.com/method/hypernetwork", "mpnn": "https://paperswithcode.com/method/mpnn", "message passing neural network": "https://paperswithcode.com/method/mpnn", "high-order proximity preserved embedding": "https://paperswithcode.com/method/hope", "low rank tensor learning paradigms": "https://paperswithcode.com/method/low-rank-tensor-learning-paradigms", "time-homogenuous top-k ranking": "https://paperswithcode.com/method/low-rank-tensor-learning-paradigms", "sgd with momentum": "https://paperswithcode.com/method/sgd-with-momentum", "gaussian affinity": "https://paperswithcode.com/method/gaussian-affinity", "squeezenext block": "https://paperswithcode.com/method/squeezenext-block", "gan-tts": "https://paperswithcode.com/method/gan-tts", "position-sensitive roialign": "https://paperswithcode.com/method/position-sensitive-roialign", "retinamask": "https://paperswithcode.com/method/retinamask", "squeezenext": "https://paperswithcode.com/method/squeezenext", "class activation guide": "https://paperswithcode.com/method/cag", "target policy smoothing": "https://paperswithcode.com/method/target-policy-smoothing", "stacked hourglass network": "https://paperswithcode.com/method/stacked-hourglass-network", "asff": "https://paperswithcode.com/method/asff", "adaptively spatial feature fusion": "https://paperswithcode.com/method/asff", "linear warmup with cosine annealing": "https://paperswithcode.com/method/linear-warmup-with-cosine-annealing", "deep-captcha": "https://paperswithcode.com/method/deep-captcha", "point-wise spatial attention": "https://paperswithcode.com/method/point-wise-spatial-attention", "resnext block": "https://paperswithcode.com/method/resnext-block", "csgld": "https://paperswithcode.com/method/csgld", "contour stochastic gradient langevin dynamics": "https://paperswithcode.com/method/csgld", "rmsprop": "https://paperswithcode.com/method/rmsprop", "nima": "https://paperswithcode.com/method/nima", "neural image assessment": "https://paperswithcode.com/method/nima", "wideresnet": "https://paperswithcode.com/method/wideresnet", "orthogonal regularization": "https://paperswithcode.com/method/orthogonal-regularization", "foveabox": "https://paperswithcode.com/method/foveabox", "cornernet-saccade": "https://paperswithcode.com/method/cornernet-saccade", "adadelta": "https://paperswithcode.com/method/adadelta", "densenas": "https://paperswithcode.com/method/densenas", "adaptive nms": "https://paperswithcode.com/method/adaptive-nms", "one-shot aggregation": "https://paperswithcode.com/method/one-shot-aggregation", "e-mbconv": "https://paperswithcode.com/method/e-mbconv", "vgae": "https://paperswithcode.com/method/vgae", "variational graph auto encoder": "https://paperswithcode.com/method/vgae", "goal-driven tree-structured neural model": "https://paperswithcode.com/method/gts", "harris hawks optimization (hho)": "https://paperswithcode.com/method/hho", "harris hawks optimization": "https://paperswithcode.com/method/hho", "auto-classifier": "https://paperswithcode.com/method/auto-classifier", "res2net block": "https://paperswithcode.com/method/res2net-block", "lapeigen": "https://paperswithcode.com/method/lapeigen", "laplacian eigenmap": "https://paperswithcode.com/method/lapeigen", "split attention": "https://paperswithcode.com/method/split-attention", "cnn bilstm": "https://paperswithcode.com/method/cnn-bilstm", "cnn bidirectional lstm": "https://paperswithcode.com/method/cnn-bilstm", "sesame discriminator": "https://paperswithcode.com/method/sesame-discriminator", "conditional random field": "https://paperswithcode.com/method/crf", "mutual information machine": "https://paperswithcode.com/method/mim", "deepwalk": "https://paperswithcode.com/method/deepwalk", "hermite activation": "https://paperswithcode.com/method/hermite", "hermite polynomial activation": "https://paperswithcode.com/method/hermite", "merl": "https://paperswithcode.com/method/merl", "meta reward learning": "https://paperswithcode.com/method/merl", "random ensemble mixture": "https://paperswithcode.com/method/rem", "grammatical evolution + q-learning": "https://paperswithcode.com/method/grammatical-evolution-q-learning", "grammatical evolution and q-learning": "https://paperswithcode.com/method/grammatical-evolution-q-learning", "causal convolution": "https://paperswithcode.com/method/causal-convolution", "eca-net": "https://paperswithcode.com/method/eca-net", "syntax heat parse tree": "https://paperswithcode.com/method/syntax-heat-parse-tree", "resgld": "https://paperswithcode.com/method/resgld", "replica exchange stochastic gradient langevin dynamics": "https://paperswithcode.com/method/resgld", "shape adaptor": "https://paperswithcode.com/method/shape-adaptor", "fast-yolov4-smallobj": "https://paperswithcode.com/method/fast-yolov4-smallobj", "condinst": "https://paperswithcode.com/method/condinst", "conditional convolutions for instance segmentation": "https://paperswithcode.com/method/condinst", "u-net gan": "https://paperswithcode.com/method/u-net-gan", "u-net generative adversarial network": "https://paperswithcode.com/method/u-net-gan", "attentive normalization": "https://paperswithcode.com/method/attentive-normalization", "osa (identity mapping + ese)": "https://paperswithcode.com/method/osa-identity-mapping-ese", "longformer": "https://paperswithcode.com/method/longformer", "targeted dropout": "https://paperswithcode.com/method/targeted-dropout", "maxout": "https://paperswithcode.com/method/maxout", "mixnet": "https://paperswithcode.com/method/mixnet", "invertible 1x1 convolution": "https://paperswithcode.com/method/invertible-1x1-convolution", "libra r-cnn": "https://paperswithcode.com/method/libra-r-cnn", "assemble-resnet": "https://paperswithcode.com/method/assemble-resnet", "experience replay": "https://paperswithcode.com/method/experience-replay", "masked convolution": "https://paperswithcode.com/method/masked-convolution", "highway layer": "https://paperswithcode.com/method/highway-layer", "wordpiece": "https://paperswithcode.com/method/wordpiece", "dilated bottleneck with projection block": "https://paperswithcode.com/method/dilated-bottleneck-with-projection-block", "orb-slam2": "https://paperswithcode.com/method/orb-slam2", "orb-simultaneous localization and mapping": "https://paperswithcode.com/method/orb-slam2", "low-resolution input": "https://paperswithcode.com/method/low-resolution-input", "local interpretable model-agnostic explanations": "https://paperswithcode.com/method/lime", "mogrifier lstm": "https://paperswithcode.com/method/mogrifier-lstm", "simaug": "https://paperswithcode.com/method/simaug", "simulation as augmentation": "https://paperswithcode.com/method/simaug", "lovasz-softmax": "https://paperswithcode.com/method/lovasz-softmax", "googlenet": "https://paperswithcode.com/method/googlenet", "stylegan2": "https://paperswithcode.com/method/stylegan2", "rational activation function": "https://paperswithcode.com/method/rational", "average pooling": "https://paperswithcode.com/method/average-pooling", "scan-clustering": "https://paperswithcode.com/method/scan", "semantic clustering by adopting nearest neighbours": "https://paperswithcode.com/method/scan", "alcn": "https://paperswithcode.com/method/alcn", "adaptive locally connected neuron": "https://paperswithcode.com/method/alcn", "clipped double q-learning": "https://paperswithcode.com/method/clipped-double-q-learning", "swish": "https://paperswithcode.com/method/swish", "support vector machine": "https://paperswithcode.com/method/svm", "exponential linear unit": "https://paperswithcode.com/method/elu", "schnet": "https://paperswithcode.com/method/schnet", "schr\u00f6dinger network": "https://paperswithcode.com/method/schnet", "accumulating eligibility trace": "https://paperswithcode.com/method/accumulating-eligibility-trace", "densenas-a": "https://paperswithcode.com/method/densenas-a", "simplenet": "https://paperswithcode.com/method/simplenet", "spatial broadcast decoder": "https://paperswithcode.com/method/sbd", "polya-gamma augmentation": "https://paperswithcode.com/method/polya-gamma-augmentation", "data augmentation using polya-gamma latent variables.": "https://paperswithcode.com/method/polya-gamma-augmentation", "adaptive richard's curve weighted activation": "https://paperswithcode.com/method/aria", "denoising autoencoder": "https://paperswithcode.com/method/denoising-autoencoder", "specgan": "https://paperswithcode.com/method/specgan", "ffmv2": "https://paperswithcode.com/method/ffmv2", "feature fusion module v2": "https://paperswithcode.com/method/ffmv2", "auxiliary classifier": "https://paperswithcode.com/method/auxiliary-classifier", "srelu": "https://paperswithcode.com/method/srelu", "s-shaped relu": "https://paperswithcode.com/method/srelu", "cdcc-net": "https://paperswithcode.com/method/cdcc-net", "pyramidal bottleneck residual unit": "https://paperswithcode.com/method/pyramidal-bottleneck-residual-unit", "mobile densenet": "https://paperswithcode.com/method/mobile-densenet", "convtasnet": "https://paperswithcode.com/method/convtasnet", "convolutional time-domain audio separation network": "https://paperswithcode.com/method/convtasnet", "noisynet-dqn": "https://paperswithcode.com/method/noisynet-dqn", "local response normalization": "https://paperswithcode.com/method/local-response-normalization", "mixture of logistic distributions": "https://paperswithcode.com/method/mixture-of-logistic-distributions", "tacotron 2": "https://paperswithcode.com/method/tacotron-2", "tacotron2": "https://paperswithcode.com/method/tacotron-2", "cosine normalization": "https://paperswithcode.com/method/cosine-normalization", "relu": "https://paperswithcode.com/method/relu", "rectified linear units": "https://paperswithcode.com/method/relu", "yellowfin": "https://paperswithcode.com/method/yellowfin", "mish": "https://paperswithcode.com/method/mish", "residual connection": "https://paperswithcode.com/method/residual-connection", "polynomial rate decay": "https://paperswithcode.com/method/polynomial-rate-decay", "srgan": "https://paperswithcode.com/method/srgan", "generative adversarial imitation learning": "https://paperswithcode.com/method/ail", "safran": "https://paperswithcode.com/method/safran", "safran - scalable and fast non-redundant rule application": "https://paperswithcode.com/method/safran", "feedback alignment": "https://paperswithcode.com/method/dfa", "cspdensenet-elastic": "https://paperswithcode.com/method/cspdensenet-elastic", "wavegrad dblock": "https://paperswithcode.com/method/wavegrad-dblock", "inception-v4": "https://paperswithcode.com/method/inception-v4", "netmf": "https://paperswithcode.com/method/netmf", "network embedding as matrix factorization:": "https://paperswithcode.com/method/netmf", "inception-v3": "https://paperswithcode.com/method/inception-v3", "bigru": "https://paperswithcode.com/method/bigru", "bidirectional gru": "https://paperswithcode.com/method/bigru", "weight demodulation": "https://paperswithcode.com/method/weight-demodulation", "stochastic depth": "https://paperswithcode.com/method/stochastic-depth", "thinned u-shape module": "https://paperswithcode.com/method/tum", "switchable normalization": "https://paperswithcode.com/method/switchable-normalization", "upit": "https://paperswithcode.com/method/upit", "utterance level permutation invariant training": "https://paperswithcode.com/method/upit", "densenas-c": "https://paperswithcode.com/method/densenas-c", "adaptive dropout": "https://paperswithcode.com/method/adaptive-dropout", "varifocal loss": "https://paperswithcode.com/method/varifocal-loss", "gated convolution network": "https://paperswithcode.com/method/gated-convolution-network", "sparse autoencoder": "https://paperswithcode.com/method/sparse-autoencoder", "sentencepiece": "https://paperswithcode.com/method/sentencepiece", "instance-level meta normalization": "https://paperswithcode.com/method/instance-level-meta-normalization", "cyclegan": "https://paperswithcode.com/method/cyclegan", "yolov2": "https://paperswithcode.com/method/yolov2", "variational autoencoder": "https://paperswithcode.com/method/vae", "neural additive model": "https://paperswithcode.com/method/nam", "low-level backbone": "https://paperswithcode.com/method/low-level-backbone", "associative lstm": "https://paperswithcode.com/method/associative-lstm", "tridentnet block": "https://paperswithcode.com/method/tridentnet-block", "dvd-gan gblock": "https://paperswithcode.com/method/dvd-gan-gblock", "dicenet": "https://paperswithcode.com/method/dicenet", "4d a*": "https://paperswithcode.com/method/4d-a", "four-dimensional a-star": "https://paperswithcode.com/method/4d-a", "espnetv2": "https://paperswithcode.com/method/espnetv2", "strided attention": "https://paperswithcode.com/method/strided-attention", "beta-vae": "https://paperswithcode.com/method/beta-vae", "layerdrop": "https://paperswithcode.com/method/layerdrop", "paranet": "https://paperswithcode.com/method/paranet", "random synthesized attention": "https://paperswithcode.com/method/random-synthesized-attention", "amoebanet": "https://paperswithcode.com/method/amoebanet", "spatial transformer": "https://paperswithcode.com/method/spatial-transformer", "1cycle": "https://paperswithcode.com/method/1cycle", "1cycle learning rate scheduling policy": "https://paperswithcode.com/method/1cycle", "vocgan": "https://paperswithcode.com/method/vocgan", "wavevae": "https://paperswithcode.com/method/wavevae", "sliced iterative generator": "https://paperswithcode.com/method/sig", "autoencoder": "https://paperswithcode.com/method/autoencoder", "inception-resnet-v2-b": "https://paperswithcode.com/method/inception-resnet-v2-b", "reversible residual block": "https://paperswithcode.com/method/reversible-residual-block", "hybrid task cascade": "https://paperswithcode.com/method/htc", "focal loss": "https://paperswithcode.com/method/focal-loss", "inception-resnet-v2-a": "https://paperswithcode.com/method/inception-resnet-v2-a", "unetxst": "https://paperswithcode.com/method/unetxst", "lsgan": "https://paperswithcode.com/method/lsgan", "linear warmup with linear decay": "https://paperswithcode.com/method/linear-warmup-with-linear-decay", "glove embeddings": "https://paperswithcode.com/method/glove", "vgg loss": "https://paperswithcode.com/method/vgg-loss", "random erasing": "https://paperswithcode.com/method/random-erasing", "laplacian pyramid": "https://paperswithcode.com/method/laplacian-pyramid", "droppath": "https://paperswithcode.com/method/droppath", "pspnet": "https://paperswithcode.com/method/pspnet", "cspresnext": "https://paperswithcode.com/method/cspresnext", "resnext-elastic": "https://paperswithcode.com/method/resnext-elastic", "spinenet": "https://paperswithcode.com/method/spinenet", "aging evolution": "https://paperswithcode.com/method/aging-evolution", "lda2vec": "https://paperswithcode.com/method/lda2vec", "tanh activation": "https://paperswithcode.com/method/tanh-activation", "dynamic time warping": "https://paperswithcode.com/method/dtw", "centernet": "https://paperswithcode.com/method/centernet", "gan feature matching": "https://paperswithcode.com/method/feature-matching", "noisy student": "https://paperswithcode.com/method/noisy-student", "amsbound": "https://paperswithcode.com/method/amsbound", "m2det": "https://paperswithcode.com/method/m2det", "soft actor critic": "https://paperswithcode.com/method/soft-actor-critic", "legendre memory unit": "https://paperswithcode.com/method/lmu", "gelu": "https://paperswithcode.com/method/gelu", "gaussian error linear units": "https://paperswithcode.com/method/gelu", "replacing eligibility trace": "https://paperswithcode.com/method/replacing-eligibility-trace", "waveglow": "https://paperswithcode.com/method/waveglow", "iou-net": "https://paperswithcode.com/method/iou-net", "shap": "https://paperswithcode.com/method/shap", "shapley additive explanations": "https://paperswithcode.com/method/shap", "overfeat": "https://paperswithcode.com/method/overfeat", "kollen-pollack learning": "https://paperswithcode.com/method/kp", "psanet": "https://paperswithcode.com/method/psanet", "lsuv initialization": "https://paperswithcode.com/method/lsuv-initialization", "layer-sequential unit-variance initialization": "https://paperswithcode.com/method/lsuv-initialization", "instaboost": "https://paperswithcode.com/method/instaboost", "gpt-2": "https://paperswithcode.com/method/gpt-2", "nlsig": "https://paperswithcode.com/method/nlsig", "nlogistic-sigmoid function": "https://paperswithcode.com/method/nlsig", "rnndrop": "https://paperswithcode.com/method/rnndrop", "ape-x dpg": "https://paperswithcode.com/method/ape-x-dpg", "adaptive feature pooling": "https://paperswithcode.com/method/adaptive-feature-pooling", "melgan residual block": "https://paperswithcode.com/method/melgan-residual-block", "cspdensenet": "https://paperswithcode.com/method/cspdensenet", "tree-structured parzen estimator approach (tpe)": "https://paperswithcode.com/method/tree-structured-parzen-estimator-approach-tpe", "location sensitive attention": "https://paperswithcode.com/method/location-sensitive-attention", "deepcluster": "https://paperswithcode.com/method/deepcluster", "presgan": "https://paperswithcode.com/method/presgan", "prescribed generative adversarial network": "https://paperswithcode.com/method/presgan", "discrete cosine transform": "https://paperswithcode.com/method/discrete-cosine-transform", "randaugment": "https://paperswithcode.com/method/randaugment", "spectral normalization": "https://paperswithcode.com/method/spectral-normalization", "adaptive input representations": "https://paperswithcode.com/method/adaptive-input-representations", "td-vae": "https://paperswithcode.com/method/td-vae", "multi-head linear attention": "https://paperswithcode.com/method/multi-head-linear-attention", "maddpg": "https://paperswithcode.com/method/maddpg", "harmonic block": "https://paperswithcode.com/method/harmonic-block", "shakedrop": "https://paperswithcode.com/method/shakedrop", "deep lstm reader": "https://paperswithcode.com/method/deep-lstm-reader", "deformable kernel": "https://paperswithcode.com/method/deformable-kernel", "random gaussian blur": "https://paperswithcode.com/method/random-gaussian-blur", "1d cnn": "https://paperswithcode.com/method/1d-cnn", "1-dimensional convolutional neural networks": "https://paperswithcode.com/method/1d-cnn", "fixed factorized attention": "https://paperswithcode.com/method/fixed-factorized-attention", "dau-convnet": "https://paperswithcode.com/method/dau-convnet", "displaced aggregation units": "https://paperswithcode.com/method/dau-convnet", "boom layer": "https://paperswithcode.com/method/boom-layer", "knn and iou based verification": "https://paperswithcode.com/method/knn-and-iou-based-verification", "noisynet-a3c": "https://paperswithcode.com/method/noisynet-a3c", "depthwise convolution": "https://paperswithcode.com/method/depthwise-convolution", "dilated sliding window attention": "https://paperswithcode.com/method/dilated-sliding-window-attention", "local importance-based pooling": "https://paperswithcode.com/method/local-importance-based-pooling", "cspresnext block": "https://paperswithcode.com/method/cspresnext-block", "sdne": "https://paperswithcode.com/method/sdne", "structural deep network embedding": "https://paperswithcode.com/method/sdne", "appo": "https://paperswithcode.com/method/appo", "asynchronous proximal policy optimization": "https://paperswithcode.com/method/appo", "dnas": "https://paperswithcode.com/method/dnas", "autogan": "https://paperswithcode.com/method/autogan", "submanifold convolution": "https://paperswithcode.com/method/submanifold-convolutions", "m-arcsinh": "https://paperswithcode.com/method/m-arcsinh", "modified arcsinh": "https://paperswithcode.com/method/m-arcsinh", "corner pooling": "https://paperswithcode.com/method/corner-pooling", "centripetalnet": "https://paperswithcode.com/method/centripetalnet", "mask scoring r-cnn": "https://paperswithcode.com/method/mask-scoring-r-cnn", "liteseg": "https://paperswithcode.com/method/liteseg", "senet": "https://paperswithcode.com/method/senet", "fast autoaugment": "https://paperswithcode.com/method/fast-autoaugment", "triplet attention": "https://paperswithcode.com/method/triplet-attention", "sparse r-cnn": "https://paperswithcode.com/method/sparse-r-cnn", "inverse square root schedule": "https://paperswithcode.com/method/inverse-square-root-schedule", "soft-nms": "https://paperswithcode.com/method/soft-nms", "shufflenet v2 downsampling block": "https://paperswithcode.com/method/shufflenet-v2-downsampling-block", "hri pipeline": "https://paperswithcode.com/method/hri-pipeline", "human robot interaction pipeline": "https://paperswithcode.com/method/hri-pipeline", "dimfuse": "https://paperswithcode.com/method/dimfuse", "dimension-wise fusion": "https://paperswithcode.com/method/dimfuse", "inception module": "https://paperswithcode.com/method/inception-module", "resnext": "https://paperswithcode.com/method/resnext", "large-scale information network embedding": "https://paperswithcode.com/method/line", "snet": "https://paperswithcode.com/method/snet", "r(2+1)d": "https://paperswithcode.com/method/r-2-1-d", "random scaling": "https://paperswithcode.com/method/random-scaling", "balanced l1 loss": "https://paperswithcode.com/method/balanced-l1-loss", "step decay": "https://paperswithcode.com/method/step-decay", "transformer-xl": "https://paperswithcode.com/method/transformer-xl", "convolution": "https://paperswithcode.com/method/convolution", "batch normalization": "https://paperswithcode.com/method/batch-normalization", "label smoothing": "https://paperswithcode.com/method/label-smoothing", "fully convolutional network": "https://paperswithcode.com/method/fcn", "lambda layer": "https://paperswithcode.com/method/lambda-layer", "dextra": "https://paperswithcode.com/method/dextra", "double dqn": "https://paperswithcode.com/method/double-dqn", "factorized random synthesized attention": "https://paperswithcode.com/method/factorized-random-synthesized-attention", "dropconnect": "https://paperswithcode.com/method/dropconnect", "k-nn": "https://paperswithcode.com/method/k-nn", "k-nearest neighbors": "https://paperswithcode.com/method/k-nn", "rrelu": "https://paperswithcode.com/method/rrelu", "randomized leaky rectified linear units": "https://paperswithcode.com/method/rrelu", "differentiable architecture search": "https://paperswithcode.com/method/darts", "mlstm": "https://paperswithcode.com/method/mlstm", "multiplicative lstm": "https://paperswithcode.com/method/mlstm", "phase shuffle": "https://paperswithcode.com/method/phase-shuffle", "dvd-gan dblock": "https://paperswithcode.com/method/dvd-gan-dblock", "nt-xent": "https://paperswithcode.com/method/nt-xent", "normalized temperature-scaled cross entropy loss": "https://paperswithcode.com/method/nt-xent", "alphazero": "https://paperswithcode.com/method/alphazero", "cosine power annealing": "https://paperswithcode.com/method/cosine-power-annealing", "cgru": "https://paperswithcode.com/method/cgru", "convolutional gru": "https://paperswithcode.com/method/cgru", "3dis": "https://paperswithcode.com/method/3dis", "3-dimensional interaction space": "https://paperswithcode.com/method/3dis", "inception v2": "https://paperswithcode.com/method/inception-v2", "spectral clustering": "https://paperswithcode.com/method/spectral-clustering", "deeplabv2": "https://paperswithcode.com/method/deeplabv2", "annealing snnl": "https://paperswithcode.com/method/annealing-snnl", "soft nearest neighbor loss with annealing temperature": "https://paperswithcode.com/method/annealing-snnl", "non-local block": "https://paperswithcode.com/method/non-local-block", "moga-a": "https://paperswithcode.com/method/moga-a", "elastic resnext block": "https://paperswithcode.com/method/elastic-resnext-block", "inception-a": "https://paperswithcode.com/method/inception-a", "resnet": "https://paperswithcode.com/method/resnet", "residual network": "https://paperswithcode.com/method/resnet", "(2+1)d convolution": "https://paperswithcode.com/method/2-1-d-convolution", "encattagg": "https://paperswithcode.com/method/encattagg", "encoder-attender-aggregator": "https://paperswithcode.com/method/encattagg", "multimodal fuzzy fusion framework": "https://paperswithcode.com/method/mff", "bottleneck transformer block": "https://paperswithcode.com/method/bottleneck-transformer-block", "softpool": "https://paperswithcode.com/method/softpool", "soft pooling": "https://paperswithcode.com/method/softpool", "single-headed attention": "https://paperswithcode.com/method/single-headed-attention", "reduction-a": "https://paperswithcode.com/method/reduction-a", "max pooling": "https://paperswithcode.com/method/max-pooling", "cyclical learning rate policy": "https://paperswithcode.com/method/cyclical-learning-rate-policy", "neural cache": "https://paperswithcode.com/method/neural-cache", "gansformer": "https://paperswithcode.com/method/gansformer", "generative adversarial transformer": "https://paperswithcode.com/method/gansformer", "mnmf": "https://paperswithcode.com/method/mnmf", "modularity preserving nmf": "https://paperswithcode.com/method/mnmf", "film module": "https://paperswithcode.com/method/film-module", "dynamic algorithm configuration": "https://paperswithcode.com/method/dac", "k-sparse autoencoder": "https://paperswithcode.com/method/k-sparse-autoencoder", "reduction-b": "https://paperswithcode.com/method/reduction-b", "disentangled attribution curves": "https://paperswithcode.com/method/disentangled-attribution-curves", "hypertree metamodel": "https://paperswithcode.com/method/hypertree-metamodel", "deep q-network": "https://paperswithcode.com/method/dqn", "npid++": "https://paperswithcode.com/method/npid-1", "melgan": "https://paperswithcode.com/method/melgan", "dsam loss": "https://paperswithcode.com/method/dsam-loss", "distance shrinking with angular marginalizing loss": "https://paperswithcode.com/method/dsam-loss", "chexnet": "https://paperswithcode.com/method/chexnet", "autoencoders": "https://paperswithcode.com/method/ae", "moga-b": "https://paperswithcode.com/method/moga-b", "coordconv": "https://paperswithcode.com/method/coordconv", "differentiable hyperparameter search": "https://paperswithcode.com/method/differentiable-hyperparameter-search", "adaptive span transformer": "https://paperswithcode.com/method/adaptive-span-transformer", "cascade r-cnn": "https://paperswithcode.com/method/cascade-r-cnn", "nadam": "https://paperswithcode.com/method/nadam", "twin delayed deep deterministic": "https://paperswithcode.com/method/td3", "wegl": "https://paperswithcode.com/method/wegl", "wasserstein embedding for graph learning": "https://paperswithcode.com/method/wegl", "synann": "https://paperswithcode.com/method/synann", "synaptic neural network": "https://paperswithcode.com/method/synann", "watch your step": "https://paperswithcode.com/method/wys", "batchchannel normalization": "https://paperswithcode.com/method/batchchannel-normalization", "weight normalization": "https://paperswithcode.com/method/weight-normalization", "vision transformer": "https://paperswithcode.com/method/vision-transformer", "channel-wise soft attention": "https://paperswithcode.com/method/channel-wise-soft-attention", "recurrent dropout": "https://paperswithcode.com/method/recurrent-dropout", "snip": "https://paperswithcode.com/method/snip", "compact global descriptor": "https://paperswithcode.com/method/compact-global-descriptor", "fasttext": "https://paperswithcode.com/method/fasttext", "compressive transformer": "https://paperswithcode.com/method/compressive-transformer", "mfec": "https://paperswithcode.com/method/mfec", "model-free episodic control": "https://paperswithcode.com/method/mfec", "streaming module": "https://paperswithcode.com/method/streaming-module", "pnas": "https://paperswithcode.com/method/pnas", "progressive neural architecture search": "https://paperswithcode.com/method/pnas", "region proposal network": "https://paperswithcode.com/method/rpn", "mobilenetv2": "https://paperswithcode.com/method/mobilenetv2", "roipool": "https://paperswithcode.com/method/roi-pooling", "progan": "https://paperswithcode.com/method/progan", "progressively growing gan": "https://paperswithcode.com/method/progan", "trpo": "https://paperswithcode.com/method/trpo", "trust region policy optimization": "https://paperswithcode.com/method/trpo", "cs-gan": "https://paperswithcode.com/method/cs-gan", "universal transformer": "https://paperswithcode.com/method/universal-transformer", "mpso": "https://paperswithcode.com/method/mpso", "motion-encoded particle swarm optimization": "https://paperswithcode.com/method/mpso", "linear layer": "https://paperswithcode.com/method/linear-layer", "efficient recurrent unit": "https://paperswithcode.com/method/eru"}